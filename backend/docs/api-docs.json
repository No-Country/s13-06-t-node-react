{
  "openapi": "3.1.0",
  "info": { "title": "ticket-bus", "description": "", "version": "1.0.0" },
  "tags": [
    { "name": "Auth" },
    { "name": "Users" },
    { "name": "Passengers" },
    { "name": "Cities" },
    { "name": "Terminals" },
    { "name": "Vehicles" },
    { "name": "Amenities" },
    { "name": "Routes" },
    { "name": "Schedules" },
    { "name": "Reservation" },
    { "name": "Tickets" }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Inicio de sesión de usuario registrado",
        "deprecated": false,
        "description": "",
        "operationId": "loginUser",
        "tags": ["Auth"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Login" },
              "example": {
                "email": "usuario@dominio.com",
                "password": "C0ntr4s3ñ4s3gur4"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario autenticado con éxito!",
                      "body": {
                        "user": {
                          "id": 1,
                          "dni": "01212120384",
                          "firstName": "Admin",
                          "lastName": "Admin",
                          "email": "admin@example.com",
                          "miles": 0,
                          "role": "USER"
                        },
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZjg5ZjEzNjIzNzU4NzQwMzI2YzQ3YiIsImlhdCI6MTYyNjE2NjUyMiwiZXhwIjoxNjI2MjUyOTIyfQ.4Tz6zJl0b1Z0j6h4v9Ww0kx3q9c5hZy3Dm3z9d7v9wA"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Solicitud incorrecta",
                    "value": {
                      "status": "fail",
                      "code": 400,
                      "message": "Error de validación",
                      "body": {
                        "errors": [
                          {
                            "validation": "email",
                            "code": "invalid_string",
                            "message": "Email inválido",
                            "path": ["email"]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Acceso no autorizado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Unauthorized",
                    "value": {
                      "status": "fail",
                      "code": 401,
                      "message": "Usuario o contraseña incorrecta."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo autenticar el usuario."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Resgistro de nuevo usuario",
        "deprecated": false,
        "description": "",
        "operationId": "registerUser",
        "tags": ["Auth"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Register" },
              "example": {
                "firstName": "Adrian",
                "lastName": "Fernandez",
                "email": "afernandez@mail.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario creado con éxito!",
                      "body": {
                        "user": {
                          "id": 1,
                          "dni": "01245420384",
                          "firstName": "Angel",
                          "lastName": "Diaz",
                          "email": "a.diaz@example.com",
                          "miles": 0,
                          "role": "USER"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflicto en el servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "El usuario ya existe."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo registrar el usuario."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/google": {
      "post": {
        "summary": "Inicio de sesión con Google",
        "deprecated": false,
        "description": "",
        "operationId": "loginGoogle",
        "tags": ["Auth"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Google" },
              "example": {
                "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjIwY..."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario autenticado con éxito!",
                      "body": {
                        "user": {
                          "id": 1,
                          "dni": "01212120384",
                          "firstName": "Adrian",
                          "lastName": "Hueto",
                          "email": "afernandez@mail.com",
                          "miles": 0,
                          "role": "USER"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/users": {
      "get": {
        "summary": "Obtener todos los usuarios",
        "deprecated": false,
        "description": "",
        "operationId": "getAllUsers",
        "tags": ["Users"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuarios obtenidos con éxito!",
                      "body": {
                        "users": [
                          {
                            "id": 1,
                            "dni": "01212120384",
                            "firstName": "Adrian",
                            "lastName": "Hueto",
                            "email": "a.hueto@example.com",
                            "miles": 0,
                            "role": "USER"
                          },
                          {
                            "id": 2,
                            "dni": "01212120384",
                            "firstName": "Lucas",
                            "lastName": "Lorenzo",
                            "email": "l.lorenzo@example.com",
                            "miles": 0,
                            "role": "USER"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener los usuarios!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "Crear nuevo usuario",
        "deprecated": false,
        "description": "",
        "operationId": "registerUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Adjuntar token JWT Bearer de autenticación",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Register" },
              "example": {
                "firstName": "Adrian",
                "lastName": "Fernandez",
                "email": "afernandez@mail.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario creado con éxito!",
                      "body": {
                        "user": {
                          "id": 1,
                          "firstName": "Adrian",
                          "lastName": "Fernandez",
                          "email": "afernandez@mail.com",
                          "miles": 0,
                          "role": "USER"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflicto en el servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "El usuario ya existe."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo registrar el usuario."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Obtener un usuario por su ID",
        "deprecated": false,
        "description": "",
        "operationId": "getUserByID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del usuario",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario obtenido con éxito!",
                      "body": {
                        "user": {
                          "id": 1,
                          "firstName": "Adrian",
                          "lastName": "Hueto",
                          "email": "ahueto@mail.com",
                          "miles": 0,
                          "role": "USER"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró usuario con el ID: 0"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "Actualizar usuario",
        "deprecated": false,
        "description": "",
        "operationId": "updateUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del usuario",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Register" },
              "example": {
                "firstName": "Adrian",
                "lastName": "Fernandez",
                "email": "afernandez@mail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario actualizado con éxito!",
                      "body": {
                        "user": {
                          "id": 1,
                          "firstName": "Adrian",
                          "lastName": "Fernandez",
                          "email": "afernandez@mail.com",
                          "miles": 0,
                          "role": "USER"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró usuario con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo actualizar el usuario."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Eliminar usuario",
        "deprecated": false,
        "description": "",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del usuario",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario eliminado con éxito!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró usuario con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo eliminar el usuario."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/users/email/{email}": {
      "get": {
        "summary": "Obtener un usuario por su Email",
        "deprecated": false,
        "description": "",
        "operationId": "getUserByEmail",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email con que se registró el usuario",
            "required": true,
            "example": "user@mail.com",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Usuario obtenido con éxito!",
                      "body": {
                        "user": {
                          "id": 1,
                          "firstName": "Adrian",
                          "lastName": "Hueto",
                          "email": "ahueto@mail.com",
                          "miles": 0,
                          "role": "USER"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró usuario con el email: 0"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "security": []
    },
    "/passengers": {
      "get": {
        "summary": "Obtener todos los pasajeros",
        "deprecated": false,
        "description": "",
        "operationId": "getAllPassengers",
        "tags": ["Passengers"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Pasajeros obtenidos con éxito!",
                      "body": {
                        "passengers": [
                          {
                            "id": 1,
                            "dni": "01212120384",
                            "firstName": "Adrian",
                            "lastName": "Hueto",
                            "userClientId": 1
                          },
                          {
                            "id": 2,
                            "dni": "01212120384",
                            "firstName": "Lucas",
                            "lastName": "Lorenzo",
                            "userClientId": 2
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener los pasajeros!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Registro de nuevo pasajero",
        "deprecated": false,
        "description": "",
        "operationId": "registerPassenger",
        "tags": ["Passengers"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Passenger" },
              "example": {
                "dni": "01245420354",
                "firstName": "Adrian",
                "lastName": "Fernandez",
                "userClientId": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Pasajero creado con éxito!",
                      "body": {
                        "passenger": {
                          "id": 3,
                          "dni": "01245420354",
                          "firstName": "Angel",
                          "lastName": "Diaz",
                          "userClientId": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflicto en el servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "El pasajero ya existe."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo registrar el pasajero."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/passengers/{id}": {
      "get": {
        "summary": "Obtener un pasajero por su ID",
        "deprecated": false,
        "description": "",
        "operationId": "getPassengerByID",
        "tags": ["Passengers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del pasajero",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Pasajero obtenido con éxito!",
                      "body": {
                        "passenger": {
                          "id": 1,
                          "dni": "01212120384",
                          "firstName": "Adrian",
                          "lastName": "Hueto",
                          "userClientId": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró pasajero con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener al pasajero!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "Actualizar pasajero",
        "deprecated": false,
        "description": "",
        "operationId": "updatePassenger",
        "tags": ["Passengers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del pasajero",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Passenger" },
              "example": {
                "dni": "01245420354",
                "firstName": "Adrian",
                "lastName": "Fernandez",
                "userClientId": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Pasajero actualizado con éxito!",
                      "body": {
                        "passenger": {
                          "id": 1,
                          "dni": "01245420354",
                          "firstName": "Adrian",
                          "lastName": "Fernandez",
                          "userClientId": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró pasajero con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo actualizar el pasajero."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Eliminar pasajero",
        "deprecated": false,
        "description": "",
        "operationId": "deletePassenger",
        "tags": ["Passengers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del pasajero",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Pasajero eliminado con éxito!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró pasajero con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo eliminar el pasajero."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/passengers/userClient/{id}": {
      "get": {
        "summary": "Obtener pasajeros del usuario registrado",
        "deprecated": false,
        "description": "",
        "operationId": "getPassengerByUserClientID",
        "tags": ["Passengers"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del usuario",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Pasajero obtenido con éxito!",
                      "body": {
                        "passengers": [
                          {
                            "id": 1,
                            "dni": "01212120384",
                            "firstName": "Adrian",
                            "lastName": "Hueto",
                            "userClientId": 1
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "No se pudieron obtener los pasajeros",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudieron obtener los pasajeros"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/vehicles": {
      "get": {
        "summary": "Obtener todos los vehiculos y sus amenities",
        "deprecated": false,
        "description": "",
        "operationId": "getVehicles",
        "tags": ["Vehicles"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Vehiculos obtenidos con éxito!",
                      "body": {
                        "vehicles": [
                          {
                            "id": 1,
                            "number": 1,
                            "plate": "QRST90",
                            "totalSeats": 60,
                            "amenities": [
                              "Cargador USB",
                              "WiFi",
                              "Aire Acondicionado"
                            ]
                          },
                          {
                            "id": 2,
                            "number": 2,
                            "plate": "ABCD12",
                            "totalSeats": 40,
                            "amenities": ["WiFi", "TV"]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener los vehiculos!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "Registro de nuevo vehiculo",
        "deprecated": false,
        "description": "",
        "operationId": "createVehicle",
        "tags": ["Vehicles"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Vehicle" },
              "example": {
                "number": 3,
                "plate": "ABCD12",
                "totalSeats": 40,
                "amenities": ["WiFi", "TV"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Vehiculo creado con éxito!",
                      "body": {
                        "vehicle": {
                          "id": 3,
                          "number": 3,
                          "plate": "ABCD12",
                          "totalSeats": 40,
                          "amenities": ["WiFi", "TV"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflicto en el servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "El vehiculo ya existe."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo registrar el vehiculo."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/vehicles/{id}": {
      "get": {
        "summary": "Obtener un vehiculo por su ID",
        "deprecated": false,
        "description": "",
        "operationId": "getVehicleByID",
        "tags": ["Vehicles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehiculo",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Vehiculo obtenido con éxito!",
                      "body": {
                        "vehicle": {
                          "id": 1,
                          "number": 1,
                          "plate": "QRST90",
                          "totalSeats": 60,
                          "amenities": [
                            "Cargador USB",
                            "WiFi",
                            "Aire Acondicionado"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró vehiculo con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener el vehiculo!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "Actualizar vehiculo",
        "deprecated": false,
        "description": "",
        "operationId": "updateVehicle",
        "tags": ["Vehicles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehiculo",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Vehicle" },
              "example": {
                "number": 1,
                "plate": "QRST90",
                "totalSeats": 60,
                "amenities": ["Cargador USB", "WiFi", "Aire Acondicionado"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Vehiculo actualizado con éxito!",
                      "body": {
                        "vehicle": {
                          "id": 1,
                          "number": 1,
                          "plate": "QRST90",
                          "totalSeats": 60,
                          "amenities": [
                            "Cargador USB",
                            "WiFi",
                            "Aire Acondicionado"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró vehiculo con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo actualizar el vehiculo."
                    }
                  }
                }
              }
            }
          },
          "security": []
        }
      },
      "delete": {
        "summary": "Eliminar vehiculo",
        "deprecated": false,
        "description": "",
        "operationId": "deleteVehicle",
        "tags": ["Vehicles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del vehiculo",
            "required": true,
            "example": 1,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Vehiculo eliminado con éxito!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró vehiculo con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo eliminar el vehiculo."
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/vehicles/plate/{plate}": {
      "get": {
        "summary": "Obtener un vehiculo por su placa",
        "deprecated": false,
        "description": "",
        "operationId": "getVehicleByPlate",
        "tags": ["Vehicles"],
        "parameters": [
          {
            "name": "plate",
            "in": "path",
            "description": "Placa del vehiculo",
            "required": true,
            "example": "QRST90",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Vehiculo obtenido con éxito!",
                      "body": {
                        "vehicle": {
                          "id": 1,
                          "number": 1,
                          "plate": "QRST90",
                          "totalSeats": 60,
                          "amenities": [
                            "Cargador USB",
                            "WiFi",
                            "Aire Acondicionado"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró vehiculo con la placa: QRST90"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener el vehiculo!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/routes": {
      "get": {
        "summary": "Obtener todas las rutas",
        "deprecated": false,
        "description": "",
        "operationId": "getAllRoutes",
        "tags": ["Routes"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Rutas obtenidas con éxito!",
                      "body": {
                        "routes": [
                          {
                            "id": 1,
                            "duration": "10:10:00",
                            "distance": "635.00",
                            "price": "50000.00",
                            "originTerminal": {
                              "id": 1,
                              "lat": -34.586038978354786,
                              "lon": -58.373904326868484,
                              "terminalName": "Retiro",
                              "terminalCode": 101,
                              "city": {
                                "id": 1,
                                "name": "Buenos Aires"
                              }
                            },
                            "destinationTerminal": {
                              "id": 2,
                              "lat": -31.422642411115337,
                              "lon": -64.1752754681699,
                              "terminalName": "Cordoba",
                              "terminalCode": 201,
                              "city": {
                                "id": 2,
                                "name": "Córdoba"
                              }
                            },
                            "schedules": [
                              {
                                "id": 1,
                                "day": "MON",
                                "departureTime": "08:00:00",
                                "cost": "50.00",
                                "vehicles": {
                                  "id": 1,
                                  "number": 1,
                                  "plate": "qrst90",
                                  "totalSeats": 60
                                },
                                "arrivalTime": "18:10:00"
                              },
                              {
                                "id": 2,
                                "day": "MON",
                                "departureTime": "12:00:00",
                                "cost": "50.00",
                                "vehicles": {
                                  "id": 2,
                                  "number": 2,
                                  "plate": "abcd12",
                                  "totalSeats": 40
                                },
                                "arrivalTime": "22:10:00"
                              },
                              {
                                "id": 3,
                                "day": "MON",
                                "departureTime": "16:00:00",
                                "cost": "50.00",
                                "vehicles": {
                                  "id": 3,
                                  "number": 3,
                                  "plate": "wxyz34",
                                  "totalSeats": 40
                                },
                                "arrivalTime": "02:10:00"
                              }
                            ]
                          },
                          {
                            "id": 2,
                            "duration": "07:35:00",
                            "distance": "695.00",
                            "price": "70000.00",
                            "originTerminal": {
                              "id": 2,
                              "lat": -31.422642411115337,
                              "lon": -64.1752754681699,
                              "terminalName": "Cordoba",
                              "terminalCode": 201,
                              "city": {
                                "id": 2,
                                "name": "Córdoba"
                              }
                            },
                            "destinationTerminal": {
                              "id": 1,
                              "lat": -34.586038978354786,
                              "lon": -58.373904326868484,
                              "terminalName": "Retiro",
                              "terminalCode": 101,
                              "city": {
                                "id": 1,
                                "name": "Buenos Aires"
                              }
                            },
                            "schedules": [
                              {
                                "id": 11,
                                "day": "MON",
                                "departureTime": "08:30:00",
                                "cost": "50.00",
                                "vehicles": {
                                  "id": 5,
                                  "number": 5,
                                  "plate": "jklm78",
                                  "totalSeats": 40
                                },
                                "arrivalTime": "16:05:00"
                              },
                              {
                                "id": 12,
                                "day": "MON",
                                "departureTime": "12:30:00",
                                "cost": "60.00",
                                "vehicles": {
                                  "id": 6,
                                  "number": 6,
                                  "plate": "uvwx90",
                                  "totalSeats": 60
                                },
                                "arrivalTime": "20:05:00"
                              },
                              {
                                "id": 13,
                                "day": "MON",
                                "departureTime": "16:30:00",
                                "cost": "60.00",
                                "vehicles": {
                                  "id": 7,
                                  "number": 7,
                                  "plate": "stuv12",
                                  "totalSeats": 40
                                },
                                "arrivalTime": "00:05:00"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener las rutas!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "Crear una nueva ruta",
        "deprecated": false,
        "description": "",
        "tags": ["Routes"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Route" },
              "example": {
                "originId": 1,
                "destinationId": 2,
                "duration": "09:15:00",
                "distance": "700.00",
                "price": "68900.00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ruta creada con éxito!",
                      "body": {
                        "route": {
                          "id": 1,
                          "originId": 1,
                          "destinationId": 2,
                          "duration": "09:15:00",
                          "distance": "700.00",
                          "price": "68900.00"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/routes/{id}": {
      "get": {
        "summary": "Obtener una ruta por su ID",
        "deprecated": false,
        "description": "Una ruta es un viaje que se realiza desde una terminal de origen a una terminal de destino. Cada ruta tiene un conjunto de horarios en los que se realizan los viajes.",
        "tags": ["Routes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "5",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ruta obtenida con éxito!",
                      "body": {
                        "route": {
                          "status": "success",
                          "code": 200,
                          "message": "Ruta obtenida con éxito!",
                          "body": {
                            "id": 2,
                            "duration": "07:35:00",
                            "distance": "695.00",
                            "price": "70000.00",
                            "originTerminal": {
                              "id": 2,
                              "lat": -31.422642411115337,
                              "lon": -64.1752754681699,
                              "terminalName": "Cordoba",
                              "terminalCode": 201,
                              "city": {
                                "id": 2,
                                "name": "Córdoba"
                              }
                            },
                            "destinationTerminal": {
                              "id": 1,
                              "lat": -34.586038978354786,
                              "lon": -58.373904326868484,
                              "terminalName": "Retiro",
                              "terminalCode": 101,
                              "city": {
                                "id": 1,
                                "name": "Buenos Aires"
                              }
                            },
                            "schedules": [
                              {
                                "id": 17,
                                "day": "FRI",
                                "departureTime": "10:00:00",
                                "cost": "60.00",
                                "vehicles": {
                                  "id": 5,
                                  "number": 5,
                                  "plate": "jklm78",
                                  "totalSeats": 40
                                },
                                "arrivalTime": "17:35:00"
                              },
                              {
                                "id": 11,
                                "day": "MON",
                                "departureTime": "08:30:00",
                                "cost": "50.00",
                                "vehicles": {
                                  "id": 5,
                                  "number": 5,
                                  "plate": "jklm78",
                                  "totalSeats": 40
                                },
                                "arrivalTime": "16:05:00"
                              },
                              {
                                "id": 18,
                                "day": "FRI",
                                "departureTime": "14:00:00",
                                "cost": "60.00",
                                "vehicles": {
                                  "id": 6,
                                  "number": 6,
                                  "plate": "uvwx90",
                                  "totalSeats": 60
                                },
                                "arrivalTime": "21:35:00"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró ningúna ruta con el ID: 5"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener la ruta!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "UpdateRouteById",
        "deprecated": false,
        "description": "",
        "tags": ["Routes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "5",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "originId": { "type": "integer" },
                  "destinationId": { "type": "integer" },
                  "duration": { "type": "string" },
                  "distance": { "type": "string" },
                  "price": { "type": "string" }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "duration",
                  "distance",
                  "price"
                ]
              },
              "example": {
                "originId": 1,
                "destinationId": 2,
                "duration": "22:15:00",
                "distance": "750.00",
                "price": "68900.00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "summary": "DeleteRouteById",
        "deprecated": false,
        "description": "",
        "tags": ["Routes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "5",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          }
        },
        "security": []
      }
    },
    "/schedules/all": {
      "get": {
        "summary": "Obtener todos los horarios",
        "deprecated": false,
        "description": "",
        "tags": ["Schedules"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} },
                "examples": {
                  "1": {
                    "summary": "Operación exitosa",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Horarios obtenidos con éxito!",
                      "body": {
                        "schedules": [
                          {
                            "id": 1,
                            "day": "MON",
                            "departureTime": "08:00:00",
                            "cost": "50.00",
                            "vehicles": {
                              "id": 1,
                              "number": 1,
                              "plate": "qrst90",
                              "totalSeats": 60
                            },
                            "arrivalTime": "18:10:00"
                          },
                          {
                            "id": 2,
                            "day": "MON",
                            "departureTime": "12:00:00",
                            "cost": "50.00",
                            "vehicles": {
                              "id": 2,
                              "number": 2,
                              "plate": "abcd12",
                              "totalSeats": 40
                            },
                            "arrivalTime": "22:10:00"
                          },
                          {
                            "id": 3,
                            "day": "MON",
                            "departureTime": "16:00:00",
                            "cost": "50.00",
                            "vehicles": {
                              "id": 3,
                              "number": 3,
                              "plate": "wxyz34",
                              "totalSeats": 40
                            },
                            "arrivalTime": "02:10:00"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/terminals": {
      "get": {
        "summary": "Obtener todas las terminales",
        "deprecated": false,
        "description": "",
        "tags": ["Terminals"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Operación exitosa",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Terminales obtenidas con éxito!",
                      "body": {
                        "terminals": [
                          {
                            "id": 1,
                            "lat": -34.586038978354786,
                            "lon": -58.373904326868484,
                            "cityId": 1,
                            "terminalName": "Retiro",
                            "terminalCode": 101,
                            "city": {
                              "id": 1,
                              "name": "Buenos Aires"
                            }
                          },
                          {
                            "id": 2,
                            "lat": -31.422642411115337,
                            "lon": -64.1752754681699,
                            "cityId": 2,
                            "terminalName": "Cordoba",
                            "terminalCode": 201,
                            "city": {
                              "id": 2,
                              "name": "Córdoba"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al obtener las terminales!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "Crear nueva terminal",
        "deprecated": false,
        "description": "",
        "tags": ["Terminals"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lat": { "type": "number" },
                  "lon": { "type": "number" },
                  "cityId": { "type": "integer" },
                  "terminalName": { "type": "string" },
                  "terminalCode": { "type": "integer" }
                },
                "required": [
                  "lat",
                  "lon",
                  "cityId",
                  "terminalName",
                  "terminalCode"
                ]
              },
              "example": {
                "lat": -34.586038978354786,
                "lon": -58.373904326868484,
                "cityId": 1,
                "terminalName": "Nueva Terminal",
                "terminalCode": 211
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Operación exitosa",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Terminal creada con éxito!",
                      "body": {
                        "id": 6,
                        "lat": -34.586038978354786,
                        "lon": -58.373904326868484,
                        "cityId": 1,
                        "terminalName": "Nueva Terminal",
                        "terminalCode": 211,
                        "city": {
                          "id": 1,
                          "name": "Buenos Aires"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "expected": { "type": "string" },
                              "received": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "message": { "type": "string" }
                            }
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Exception: ID inválido",
                    "value": {
                      "status": "fail",
                      "code": 400,
                      "message": "Error de validación",
                      "body": {
                        "errors": [
                          {
                            "code": "invalid_type",
                            "expected": "number",
                            "received": "string",
                            "path": ["cityId"],
                            "message": "Tipo ID Inválido, debe ser tipo INTEGER."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Exception: Código términal repetido",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "Ya existe una terminal con el código: 101"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Internal Server Error",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "Error al crear la terminal!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/terminals/{id}": {
      "get": {
        "summary": "Obtener terminal por ID",
        "deprecated": false,
        "description": "",
        "tags": ["Terminals"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "lat": { "type": "number" },
                        "lon": { "type": "number" },
                        "cityId": { "type": "integer" },
                        "terminalName": { "type": "string" },
                        "terminalCode": { "type": "integer" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "city": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "integer" },
                            "name": { "type": "string" },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" }
                          },
                          "required": ["id", "name", "createdAt", "updatedAt"]
                        }
                      },
                      "required": [
                        "id",
                        "lat",
                        "lon",
                        "cityId",
                        "terminalName",
                        "terminalCode",
                        "createdAt",
                        "updatedAt",
                        "city"
                      ]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Terminal obtenida con éxito!",
                      "body": {
                        "id": 1,
                        "lat": -34.586038978354786,
                        "lon": -58.373904326868484,
                        "cityId": 1,
                        "terminalName": "Retiro",
                        "terminalCode": 101,
                        "createdAt": "2024-02-26T17:16:01.397Z",
                        "updatedAt": "2024-02-26T17:16:01.397Z",
                        "city": {
                          "id": 1,
                          "name": "Buenos Aires",
                          "createdAt": "2024-02-26T17:16:01.354Z",
                          "updatedAt": "2024-02-26T19:18:30.800Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "Actualizar terminal",
        "deprecated": false,
        "description": "",
        "tags": ["Terminals"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1000",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lat": { "type": "number" },
                  "lon": { "type": "number" },
                  "cityId": { "type": "integer" },
                  "terminalName": { "type": "string" },
                  "terminalCode": { "type": "integer" }
                },
                "required": [
                  "lat",
                  "lon",
                  "cityId",
                  "terminalName",
                  "terminalCode"
                ]
              },
              "example": {
                "lat": -34.586038978354786,
                "lon": -58.373904326868484,
                "cityId": 1,
                "terminalName": "Nueva Terminal",
                "terminalCode": 211
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "lat": { "type": "number" },
                        "lon": { "type": "number" },
                        "cityId": { "type": "integer" },
                        "terminalName": { "type": "string" },
                        "terminalCode": { "type": "integer" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" },
                        "city": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "integer" },
                            "name": { "type": "string" },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" }
                          },
                          "required": ["id", "name", "createdAt", "updatedAt"]
                        }
                      },
                      "required": [
                        "id",
                        "lat",
                        "lon",
                        "cityId",
                        "terminalName",
                        "terminalCode",
                        "createdAt",
                        "updatedAt",
                        "city"
                      ]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Terminal actualizada con éxito!",
                      "body": {
                        "id": 6,
                        "lat": -34.586038978354786,
                        "lon": -58.373904326868484,
                        "cityId": 1,
                        "terminalName": "Nueva Terminal",
                        "terminalCode": 211,
                        "createdAt": "2024-02-27T00:46:22.191Z",
                        "updatedAt": "2024-02-27T01:12:24.200Z",
                        "city": {
                          "id": 1,
                          "name": "Buenos Aires",
                          "createdAt": "2024-02-26T17:16:01.354Z",
                          "updatedAt": "2024-02-26T19:18:30.800Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "expected": { "type": "string" },
                              "received": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "message": { "type": "string" }
                            }
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Exception: ID inválido",
                    "value": {
                      "status": "fail",
                      "code": 400,
                      "message": "Error de validación",
                      "body": {
                        "errors": [
                          {
                            "code": "invalid_type",
                            "expected": "number",
                            "received": "string",
                            "path": ["cityId"],
                            "message": "Tipo ID Inválido, debe ser tipo INTEGER."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró terminal con el ID: 1000"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Exception: Codigo de terminal ya usado",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "Ya existe una terminal con el código: 210"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Eliminar terminal",
        "deprecated": false,
        "description": "",
        "tags": ["Terminals"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "6",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Terminal eliminada con éxito!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró terminal con el ID: 1000"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/schedules": {
      "get": {
        "summary": "Obtener todos los horarios",
        "deprecated": false,
        "description": "",
        "tags": ["Schedules"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "CreateNewSchedule",
        "deprecated": false,
        "description": "",
        "tags": ["Schedules"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "originId": { "type": "integer" },
                  "destinationId": { "type": "integer" },
                  "duration": { "type": "string" },
                  "distance": { "type": "string" },
                  "price": { "type": "string" }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "duration",
                  "distance",
                  "price"
                ]
              },
              "example": {
                "originId": 1,
                "destinationId": 2,
                "duration": "09:15:00",
                "distance": "700.00",
                "price": "68900.00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          }
        },
        "security": []
      }
    },
    "/schedules/{id}": {
      "put": {
        "summary": "UpdateScheduleById",
        "deprecated": false,
        "description": "",
        "tags": ["Schedules"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "5",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "originId": { "type": "integer" },
                  "destinationId": { "type": "integer" },
                  "duration": { "type": "string" },
                  "distance": { "type": "string" },
                  "price": { "type": "string" }
                },
                "required": [
                  "originId",
                  "destinationId",
                  "duration",
                  "distance",
                  "price"
                ]
              },
              "example": {
                "originId": 1,
                "destinationId": 2,
                "duration": "22:15:00",
                "distance": "750.00",
                "price": "68900.00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "summary": "DeleteScheduleById",
        "deprecated": false,
        "description": "",
        "tags": ["Schedules"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "5",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          }
        },
        "security": []
      }
    },
    "/cities": {
      "get": {
        "summary": "Obtener todas las ciudades",
        "deprecated": false,
        "description": "",
        "tags": ["Cities"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ciudades obtenidas con éxito!",
                      "body": {
                        "cities": [
                          {
                            "id": 1,
                            "name": "Buenos Aires"
                          },
                          {
                            "id": 2,
                            "name": "Córdoba"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "Crear ciudad",
        "deprecated": false,
        "description": "",
        "tags": ["Cities"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "description": "name" }
                },
                "required": ["name"]
              },
              "example": { "name": "Palpalá" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ciudad creada con éxito!",
                      "body": { "id": 40, "name": "Palpalá" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "expected": { "type": "string" },
                              "received": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "message": { "type": "string" }
                            }
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Exception: Nombre de tipo invalido",
                    "value": {
                      "status": "fail",
                      "code": 400,
                      "message": "Error de validación",
                      "body": {
                        "errors": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "number",
                            "path": ["name"],
                            "message": "Nombre debe ser de tipo String"
                          }
                        ]
                      }
                    }
                  },
                  "2": {
                    "summary": "Exception: Name not sended",
                    "value": {
                      "status": "fail",
                      "code": 400,
                      "message": "Error de validación",
                      "body": {
                        "errors": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": ["name"],
                            "message": "Nombre de Ciudad Requerido"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Exception: Ciudad repetida",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "Ya existe una ciudad con el nombre: Rosario"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/cities/{id}": {
      "get": {
        "summary": "Obtener ciudad por ID",
        "deprecated": false,
        "description": "",
        "tags": ["Cities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID que identifica la ciudad",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ciudad obtenida con éxito!",
                      "body": {
                        "id": 1,
                        "name": "Buenos Aires",
                        "createdAt": "2024-02-26T17:16:01.354Z",
                        "updatedAt": "2024-02-26T17:16:01.354Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró ciudad con el ID: 0"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "Actualizar ciudad",
        "deprecated": false,
        "description": "",
        "tags": ["Cities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "description": "name" }
                },
                "required": ["name"]
              },
              "example": { "name": "Buenos Aires" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ciudad actualizada con éxito!",
                      "body": {
                        "id": 1,
                        "name": "Buenos Aires",
                        "createdAt": "2024-02-26T17:16:01.354Z",
                        "updatedAt": "2024-02-26T19:18:30.800Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "expected": { "type": "string" },
                              "received": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "message": { "type": "string" }
                            }
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Exception: name not sended",
                    "value": {
                      "status": "fail",
                      "code": 400,
                      "message": "Error de validación",
                      "body": {
                        "errors": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": ["name"],
                            "message": "Nombre de Ciudad Requerido"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró ciudad con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Exception: Nombre repetido",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "Ya existe una ciudad con el nombre: Buenos Aires"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Eliminar ciudad",
        "deprecated": false,
        "description": "",
        "tags": ["Cities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "39",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ciudad eliminada con éxito!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró ciudad con el ID: 10000"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/amenities": {
      "get": {
        "summary": "Obtener todos los servicios",
        "deprecated": false,
        "description": "",
        "operationId": "getAmenities",
        "tags": ["Amenities"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Servicios obtenidos con éxito!",
                      "body": {
                        "amenities": [
                          { "id": 1, "name": "Cargador USB" },
                          { "id": 2, "name": "TV" },
                          { "id": 3, "name": "Comida" },
                          { "id": 4, "name": "WiFi" },
                          { "id": 5, "name": "Aire Acondicionado" }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontraron servicios"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Exception",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudieron obtener los servicios!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "Crear nuevo servicio",
        "deprecated": false,
        "description": "",
        "tags": ["Amenities"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "name": { "type": "string" } },
                "required": ["name"]
              },
              "example": { "name": "Agua premium" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Servicio creado con éxito!",
                      "body": { "amenity": { "name": "Agua premium" } }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Exception: ID no encontrado",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "El servicio ya existe!"
                    }
                  }
                }
              }
            },
            "security": []
          }
        }
      }
    },
    "/amenities/{id}": {
      "get": {
        "summary": "Obtener servicio por ID",
        "deprecated": false,
        "description": "",
        "tags": ["Amenities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "required": ["id", "name"]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Servicio obtenido con éxito!",
                      "body": { "id": 1, "name": "Cargador USB" }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró servicio con el ID: 0"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "Actualizar servicio",
        "deprecated": false,
        "description": "",
        "tags": ["Amenities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "name": { "type": "string" } },
                "required": ["name"]
              },
              "example": { "name": "Cargador USB" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" },
                    "body": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "required": ["id", "name"]
                    }
                  },
                  "required": ["status", "code", "message", "body"]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Servicio actualizado con éxito!",
                      "body": { "id": 1, "name": "Cargador USB" }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró servicio con el ID: 0"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Exception: Nombre repetido",
                    "value": {
                      "status": "fail",
                      "code": 409,
                      "message": "Ya existe un servicio con el nombre: Cargador USB"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "delete": {
        "summary": "Eliminar servicio",
        "deprecated": false,
        "description": "",
        "tags": ["Amenities"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Servicio eliminado con éxito!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "code": { "type": "integer" },
                    "message": { "type": "string" }
                  },
                  "required": ["status", "code", "message"]
                },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró servicio con el ID: 0"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/reservations": {
      "get": {
        "summary": "Obtener todas las reservas",
        "deprecated": false,
        "description": "",
        "tags": ["Reservations"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Reservas obtenidas con éxito!",
                      "body": {
                        "reservations": [
                          {
                            "id": 1,
                            "scheduleId": 1,
                            "passengerId": 1,
                            "seatNumber": 1,
                            "totalPrice": "68900.00",
                            "createdAt": "2024-02-26T17:16:01.354Z",
                            "updatedAt": "2024-02-26T17:16:01.354Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "CreateNewReservation",
        "deprecated": false,
        "description": "",
        "tags": ["Reservations"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scheduleId": { "type": "integer" },
                  "passengerId": { "type": "integer" },
                  "seatNumber": { "type": "integer" },
                  "totalPrice": { "type": "string" }
                },
                "required": [
                  "scheduleId",
                  "passengerId",
                  "seatNumber",
                  "totalPrice"
                ]
              },
              "example": {
                "scheduleId": 1,
                "passengerId": 1,
                "seatNumber": 1,
                "totalPrice": "68900.00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Reserva creada con éxito!",
                      "body": {
                        "id": 1,
                        "scheduleId": 1,
                        "passengerId": 1,
                        "seatNumber": 1,
                        "totalPrice": "68900.00"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/reservations/{id}": {
      "get": {
        "summary": "Obtener reserva por ID",
        "deprecated": false,
        "description": "",
        "tags": ["Reservations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Reserva obtenida con éxito!",
                      "body": {
                        "id": 1,
                        "scheduleId": 1,
                        "passengerId": 1,
                        "seatNumber": 1,
                        "totalPrice": "68900.00",
                        "createdAt": "2024-02-26T17:16:01.354Z",
                        "updatedAt": "2024-02-26T17:16:01.354Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró reserva con el ID: 0"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "summary": "Actualizar reserva",
        "deprecated": false,
        "description": "",
        "tags": ["Reservations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scheduleId": { "type": "integer" },
                  "passengerId": { "type": "integer" },
                  "seatNumber": { "type": "integer" },
                  "totalPrice": { "type": "string" }
                },
                "required": [
                  "scheduleId",
                  "passengerId",
                  "seatNumber",
                  "totalPrice"
                ]
              },
              "example": {
                "scheduleId": 1,
                "passengerId": 1,
                "seatNumber": 1,
                "totalPrice": "68900.00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Reserva actualizada con éxito!",
                      "body": {
                        "id": 1,
                        "scheduleId": 1,
                        "passengerId": 1,
                        "seatNumber": 1,
                        "totalPrice": "68900.00"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontró reserva con el ID: 0"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/tickets": {
      "get": {
        "summary": "Obtener todos los tickets",
        "deprecated": false,
        "description": "",
        "tags": ["Tickets"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Tickets obtenidos con éxito!",
                      "body": {
                        "tickets": []
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Registro no encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Not Found",
                    "value": {
                      "status": "fail",
                      "code": 404,
                      "message": "No se encontraron tickets"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Exception",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudieron obtener los tickets!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "summary": "Crear nuevo ticket",
        "deprecated": false,
        "description": "",
        "tags": ["Tickets"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reservationId": { "type": "integer" },
                  "qrCode": { "type": "string" }
                },
                "required": ["reservationId", "qrCode"]
              },
              "example": {
                "reservationId": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "status": "success",
                      "code": 200,
                      "message": "Ticket creado con éxito!",
                      "body": {
                        "id": 1,
                        "reservationId": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" },
                "examples": {
                  "1": {
                    "summary": "Exception",
                    "value": {
                      "status": "error",
                      "code": 500,
                      "message": "No se pudo crear el ticket!"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "Passenger": {
        "type": "object",
        "properties": {
          "dni": { "type": "string", "examples": ["01245420384"] },
          "firstName": { "type": "string", "examples": ["Angel"] },
          "lastName": { "type": "string", "examples": ["Diaz"] },
          "userClientId": { "type": "integer", "examples": [14] }
        },
        "required": ["dni", "firstName", "lastName", "userClientId"]
      },
      "Register": {
        "type": "object",
        "properties": {
          "dni": { "type": "string", "examples": ["01212120384"] },
          "firstName": { "type": "string", "examples": ["Dani"] },
          "lastName": { "type": "string", "examples": ["Garcia"] },
          "email": { "type": "string", "examples": ["d.garcia@gxmail.com"] },
          "password": {
            "type": "string",
            "format": "password",
            "examples": ["C0ntr4s3ñ4s3gur4"]
          }
        },
        "required": ["dni", "firstName", "lastName", "email", "password"]
      },
      "LoginResponse": { "type": "object", "properties": {} },
      "Login": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "examples": ["usuario@mail.com"] },
          "password": {
            "type": "string",
            "format": "password",
            "examples": ["C0ntr4s3ñ4s3gur4"]
          }
        },
        "required": ["email", "password"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "examples": [14] },
          "dni": { "type": "string", "examples": ["01245420384"] },
          "firstName": { "type": "string", "examples": ["Angel"] },
          "lastName": { "type": "string", "examples": ["Diaz"] },
          "email": { "type": "string", "examples": ["a.diaz@example.com"] },
          "miles": { "type": "integer", "examples": [0] },
          "role": { "type": "string", "examples": ["USER"] }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "integer" },
          "message": { "type": "string" },
          "body": { "type": "object", "properties": {} }
        },
        "required": ["status", "code", "message"]
      },
      "Terminal": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "lat": { "type": "number" },
          "lon": { "type": "number" },
          "cityId": { "type": "integer" },
          "terminalName": { "type": "string" },
          "terminalCode": { "type": "integer" },
          "city": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" }
            }
          }
        },
        "required": ["lat", "lon", "cityId", "terminalName", "terminalCode"]
      },
      "Route": {
        "type": "object",
        "properties": {
          "originId": { "type": "integer" },
          "destinationId": { "type": "integer" },
          "duration": { "type": "string" },
          "distance": { "type": "string" },
          "price": { "type": "string" }
        },
        "example": {
          "originId": 1,
          "destinationId": 2,
          "duration": "09:15:00",
          "distance": "700.00",
          "price": "68900.00"
        },
        "required": [
          "originId",
          "destinationId",
          "duration",
          "distance",
          "price"
        ]
      }
    },
    "securitySchemes": {}
  },
  "servers": [
    { "url": "http://localhost:3000/api/v1", "description": "Develop Env" },
    {
      "url": "https://ticket-bus-api-dev.up.railway.app/api/v1",
      "description": "Production Env"
    }
  ]
}
